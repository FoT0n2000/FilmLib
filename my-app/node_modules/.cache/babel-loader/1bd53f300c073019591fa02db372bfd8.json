{"ast":null,"code":"import Main from \"../App/Pages/Main\";\nimport TitlePAge from \"../App/Pages/TitlePage\";\nimport UserPage from \"../App/Pages/UserPage\";\nimport TabVersion from \"../App/TabVersion\";\nimport DesktopVersion from \"../App/DesktopVersion\";\nimport SignIn from \"../App/Pages/SignIn\";\nimport SignUp from \"../App/Pages/SignUp\";\n\nvar Ons = require('onsenui'); //check os\n\n\nconst os = Ons.IsIOS() || Ons.IsAndroid(); //if mobile version\n\nconst TabIndex = 0; //mobile onEnter Hook\n\nconst onEnter = index => {\n  return (trans, state) => {\n    TabIndex = index;\n    trans.onSuccess(\"\", () => {\n      var tabs = document.getElementsByTagName(\"ons-tabbar\")[0];\n      var btn = tabs.getElementsByTagName(\"button\")[TabIndex];\n      btn.click();\n    });\n  };\n}; //noop function\n\n\nconst noop = (trans, state) => {};\n\nexport const Routes = isAuthenticated => {\n  return [{\n    name: \"app\",\n    url: \"/\",\n    component: TabVersion,\n    redirectTo: \"app.main\"\n  }, {\n    name: 'app.main',\n    url: \"main\",\n    component: Main,\n    onEnter: os ? onEnter(0) : noop()\n  }, {\n    name: 'app.categories',\n    url: \"categories\",\n    component: null,\n    onEnter: os ? onEnter(1) : noop()\n  }, {\n    name: 'app.account',\n    url: \"account\",\n    component: UserPage,\n    onEnter: os ? onEnter(2) : noop(),\n    redirectTo: trans => {\n      if (!isAuthenticated) return {\n        state: \"app.signIn\"\n      };\n    }\n  }, {\n    name: 'app.signIn',\n    url: \"signIn\",\n    component: SignIn,\n    redirectTo: trans => {\n      if (isAuthenticated) return {\n        state: \"app.account\"\n      };\n    }\n  }, {\n    name: 'app.signUp',\n    url: \"signUp\",\n    component: SignUp,\n    redirectTo: trans => {\n      if (isAuthenticated) return {\n        state: \"app.account\"\n      };\n    }\n  }];\n};\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["C:/Users/Анатолий/Desktop/университет/3 курс/6 семестр/react js/TEST/my-app/src/Routes/Routes.js"],"names":["Main","TitlePAge","UserPage","TabVersion","DesktopVersion","SignIn","SignUp","Ons","require","os","IsIOS","IsAndroid","TabIndex","onEnter","index","trans","state","onSuccess","tabs","document","getElementsByTagName","btn","click","noop","Routes","isAuthenticated","name","url","component","redirectTo"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAjB,C,CAEA;;;AACA,MAAMC,EAAE,GAAGF,GAAG,CAACG,KAAJ,MAAeH,GAAG,CAACI,SAAJ,EAA1B,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAjB,C,CAEA;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,SAAO,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACvBJ,IAAAA,QAAQ,GAAGE,KAAX;AACAC,IAAAA,KAAK,CAACE,SAAN,CAAgB,EAAhB,EAAoB,MAAM;AACtB,UAAIC,IAAI,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,YAA9B,EAA4C,CAA5C,CAAX;AACA,UAAIC,GAAG,GAAGH,IAAI,CAACE,oBAAL,CAA0B,QAA1B,EAAoCR,QAApC,CAAV;AACAS,MAAAA,GAAG,CAACC,KAAJ;AACH,KAJD;AAKD,GAPD;AAQD,CATD,C,CAWA;;;AACA,MAAMC,IAAI,GAAG,CAACR,KAAD,EAAQC,KAAR,KAAkB,CAAE,CAAjC;;AAEA,OAAO,MAAMQ,MAAM,GAAIC,eAAD,IAAqB;AACzC,SAAO,CACL;AACEC,IAAAA,IAAI,EAAE,KADR;AAEEC,IAAAA,GAAG,EAAE,GAFP;AAGEC,IAAAA,SAAS,EAAEzB,UAHb;AAIE0B,IAAAA,UAAU,EAAE;AAJd,GADK,EAOL;AACEH,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,GAAG,EAAC,MAFN;AAGEC,IAAAA,SAAS,EAAE5B,IAHb;AAIEa,IAAAA,OAAO,EAAEJ,EAAE,GAAII,OAAO,CAAC,CAAD,CAAX,GAAiBU,IAAI;AAJlC,GAPK,EAaL;AACEG,IAAAA,IAAI,EAAE,gBADR;AAEEC,IAAAA,GAAG,EAAC,YAFN;AAGEC,IAAAA,SAAS,EAAE,IAHb;AAIEf,IAAAA,OAAO,EAAEJ,EAAE,GAAII,OAAO,CAAC,CAAD,CAAX,GAAiBU,IAAI;AAJlC,GAbK,EAmBL;AACEG,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,GAAG,EAAC,SAFN;AAGEC,IAAAA,SAAS,EAAE1B,QAHb;AAIEW,IAAAA,OAAO,EAAEJ,EAAE,GAAII,OAAO,CAAC,CAAD,CAAX,GAAiBU,IAAI,EAJlC;AAKEM,IAAAA,UAAU,EAAGd,KAAD,IAAW;AACrB,UAAG,CAACU,eAAJ,EACE,OAAO;AAAET,QAAAA,KAAK,EAAE;AAAT,OAAP;AACH;AARH,GAnBK,EA6BL;AACEU,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,GAAG,EAAC,QAFN;AAGEC,IAAAA,SAAS,EAAEvB,MAHb;AAIEwB,IAAAA,UAAU,EAAGd,KAAD,IAAW;AACrB,UAAGU,eAAH,EACE,OAAO;AAAET,QAAAA,KAAK,EAAE;AAAT,OAAP;AACH;AAPH,GA7BK,EAsCL;AACEU,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,GAAG,EAAC,QAFN;AAGEC,IAAAA,SAAS,EAAEtB,MAHb;AAIEuB,IAAAA,UAAU,EAAGd,KAAD,IAAW;AACrB,UAAGU,eAAH,EACE,OAAO;AAAET,QAAAA,KAAK,EAAE;AAAT,OAAP;AACH;AAPH,GAtCK,CAAP;AAgDD,CAjDM;KAAMQ,M","sourcesContent":["import Main from \"../App/Pages/Main\";\r\nimport TitlePAge from \"../App/Pages/TitlePage\";\r\nimport UserPage from \"../App/Pages/UserPage\";\r\nimport TabVersion from \"../App/TabVersion\";\r\nimport DesktopVersion from \"../App/DesktopVersion\";\r\nimport SignIn from \"../App/Pages/SignIn\";\r\nimport SignUp from \"../App/Pages/SignUp\";\r\n\r\nvar Ons = require('onsenui');\r\n\r\n//check os\r\nconst os = Ons.IsIOS() || Ons.IsAndroid();\r\n\r\n//if mobile version\r\nconst TabIndex = 0;\r\n\r\n//mobile onEnter Hook\r\nconst onEnter = (index) => {\r\n  return (trans, state) => {\r\n    TabIndex = index;\r\n    trans.onSuccess(\"\", () => {\r\n        var tabs = document.getElementsByTagName(\"ons-tabbar\")[0];\r\n        var btn = tabs.getElementsByTagName(\"button\")[TabIndex];\r\n        btn.click();\r\n    });\r\n  }\r\n}\r\n\r\n//noop function\r\nconst noop = (trans, state) => {};\r\n\r\nexport const Routes = (isAuthenticated) => {\r\n  return [\r\n    {\r\n      name: \"app\",\r\n      url: \"/\",\r\n      component: TabVersion,\r\n      redirectTo: \"app.main\",\r\n    },\r\n    {\r\n      name: 'app.main',\r\n      url:\"main\",\r\n      component: Main,\r\n      onEnter: os ?  onEnter(0) : noop(),\r\n    },\r\n    {\r\n      name: 'app.categories',\r\n      url:\"categories\",\r\n      component: null,\r\n      onEnter: os ?  onEnter(1) : noop()\r\n    },\r\n    {\r\n      name: 'app.account',\r\n      url:\"account\",\r\n      component: UserPage,\r\n      onEnter: os ?  onEnter(2) : noop(),\r\n      redirectTo: (trans) => {\r\n        if(!isAuthenticated)\r\n          return { state: \"app.signIn\"};\r\n      }\r\n    },\r\n    {\r\n      name: 'app.signIn',\r\n      url:\"signIn\",\r\n      component: SignIn,\r\n      redirectTo: (trans) => {\r\n        if(isAuthenticated)\r\n          return { state: \"app.account\"};\r\n      }\r\n    },\r\n    {\r\n      name: 'app.signUp',\r\n      url:\"signUp\",\r\n      component: SignUp,\r\n      redirectTo: (trans) => {\r\n        if(isAuthenticated)\r\n          return { state: \"app.account\"};\r\n      }\r\n    }\r\n  ]\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0442\\u043E\\u043B\\u0438\\u0439\\\\Desktop\\\\\\u0443\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\3 \\u043A\\u0443\\u0440\\u0441\\\\6 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\react js\\\\TEST\\\\my-app\\\\src\\\\App\\\\Base.js\";\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport 'onsenui/css/onsenui.css';\nimport 'onsenui/css/onsen-css-components.css';\nimport Main from \"./Element/Pages/MainPage/Main\";\nimport { UIRouter, UIView, useSrefActive, pushStateLocationPlugin } from \"@uirouter/react\";\nimport { visualizer } from '@uirouter/visualizer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Ons = require('onsenui');\n\nvar ROns = require('react-onsenui');\n\nfunction config(router) {\n  // Specify the initial route when the initial URL matched no state\n  router.urlService.rules.initial({\n    state: \"hello\"\n  }); // Setup the state visualizer\n\n  visualizer(router);\n}\n\n;\nexport default class _class extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(ROns.Page, {\n      children: /*#__PURE__*/_jsxDEV(ROns.Tabbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n_class.states = [{\n  name: 'navigator',\n  abstract: true,\n  resolve: {\n    loaded: function ($rootScope) {\n      $rootScope.myTabbar.setActiveTab(0);\n      return $rootScope.myTabbar.loadPage('html/tab1.html');\n    }\n  }\n}, {\n  name: 'categories',\n  url: '/categories',\n  component: Main,\n  resolve: [{\n    token: 'categories',\n    deps: ['$transition$', 'categories'],\n    resolveFn: (trans, categories) => {\n      return;\n    }\n  }]\n}, {\n  name: 'main',\n  url: '/main',\n  component: Main,\n  resolve: [{\n    token: 'main',\n    deps: ['$transition$', 'main'],\n    resolveFn: (trans, main) => {\n      return;\n    }\n  }]\n}, {\n  name: 'settings',\n  url: '/settings',\n  component: Main,\n  resolve: [{\n    token: 'settings',\n    deps: ['$transition$', 'settings'],\n    resolveFn: (trans, settings) => {\n      return;\n    }\n  }]\n}];\n;","map":{"version":3,"sources":["C:/Users/Анатолий/Desktop/университет/3 курс/6 семестр/react js/TEST/my-app/src/App/Base.js"],"names":["React","ReactDOM","Main","UIRouter","UIView","useSrefActive","pushStateLocationPlugin","visualizer","Ons","require","ROns","config","router","urlService","rules","initial","state","Component","render","states","name","abstract","resolve","loaded","$rootScope","myTabbar","setActiveTab","loadPage","url","component","token","deps","resolveFn","trans","categories","main","settings"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,yBAAP;AACA,OAAO,sCAAP;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AAEA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,aAA3B,EAA0CC,uBAA1C,QAAyE,iBAAzE;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;AAEA,IAAIC,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAjB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,eAAD,CAAlB;;AAEA,SAASE,MAAT,CAAgBC,MAAhB,EAAwB;AACtB;AACAA,EAAAA,MAAM,CAACC,UAAP,CAAkBC,KAAlB,CAAwBC,OAAxB,CAAgC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAhC,EAFsB,CAGtB;;AACAT,EAAAA,UAAU,CAACK,MAAD,CAAV;AACD;;AAAA;AAED,eAAe,qBAAcZ,KAAK,CAACiB,SAApB,CAA8B;AAiD3CC,EAAAA,MAAM,GAAE;AACN,wBACE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACI,QAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAvD0C;OAEpCC,M,GAAS,CACd;AACEC,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,QAAQ,EAAE,IAFZ;AAGEC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,UAASC,UAAT,EAAqB;AAC3BA,MAAAA,UAAU,CAACC,QAAX,CAAoBC,YAApB,CAAiC,CAAjC;AACA,aAAOF,UAAU,CAACC,QAAX,CAAoBE,QAApB,CAA6B,gBAA7B,CAAP;AACD;AAJM;AAHX,CADc,EAWd;AACEP,EAAAA,IAAI,EAAE,YADR;AAEEQ,EAAAA,GAAG,EAAE,aAFP;AAGEC,EAAAA,SAAS,EAAE3B,IAHb;AAIEoB,EAAAA,OAAO,EAAE,CAAC;AACRQ,IAAAA,KAAK,EAAE,YADC;AAERC,IAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,YAAjB,CAFE;AAGVC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,UAAR,KAAsB;AAC/B;AACD;AALS,GAAD;AAJX,CAXc,EAsBd;AACEd,EAAAA,IAAI,EAAE,MADR;AAEEQ,EAAAA,GAAG,EAAE,OAFP;AAGEC,EAAAA,SAAS,EAAE3B,IAHb;AAIEoB,EAAAA,OAAO,EAAE,CAAC;AACRQ,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB,CAFE;AAGVC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQE,IAAR,KAAgB;AACzB;AACD;AALS,GAAD;AAJX,CAtBc,EAgCZ;AACAf,EAAAA,IAAI,EAAE,UADN;AAEAQ,EAAAA,GAAG,EAAE,WAFL;AAGAC,EAAAA,SAAS,EAAE3B,IAHX;AAIAoB,EAAAA,OAAO,EAAE,CAAC;AACRQ,IAAAA,KAAK,EAAE,UADC;AAERC,IAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,UAAjB,CAFE;AAGVC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQG,QAAR,KAAoB;AAC7B;AACD;AALS,GAAD;AAJT,CAhCY,C;AAsDjB","sourcesContent":["import React from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\nimport Main from \"./Element/Pages/MainPage/Main\"\r\n\r\nimport { UIRouter, UIView, useSrefActive, pushStateLocationPlugin } from \"@uirouter/react\";\r\nimport { visualizer } from '@uirouter/visualizer';\r\n\r\nvar Ons = require('onsenui');\r\nvar ROns = require('react-onsenui');\r\n\r\nfunction config(router) {\r\n  // Specify the initial route when the initial URL matched no state\r\n  router.urlService.rules.initial({ state: \"hello\" });\r\n  // Setup the state visualizer\r\n  visualizer(router);\r\n};\r\n\r\nexport default class extends React.Component {\r\n\r\n  static states = [\r\n    {\r\n      name: 'navigator',\r\n      abstract: true,\r\n      resolve: {\r\n        loaded: function($rootScope) {\r\n          $rootScope.myTabbar.setActiveTab(0);\r\n          return $rootScope.myTabbar.loadPage('html/tab1.html');\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: 'categories',\r\n      url: '/categories',\r\n      component: Main,\r\n      resolve: [{\r\n        token: 'categories',\r\n        deps: ['$transition$', 'categories'],\r\n      resolveFn: (trans, categories) =>{\r\n        return;\r\n      }}]\r\n    },\r\n    {\r\n      name: 'main',\r\n      url: '/main',\r\n      component: Main,\r\n      resolve: [{\r\n        token: 'main',\r\n        deps: ['$transition$', 'main'],\r\n      resolveFn: (trans, main) =>{\r\n        return;\r\n      }}]\r\n    },{\r\n      name: 'settings',\r\n      url: '/settings',\r\n      component: Main,\r\n      resolve: [{\r\n        token: 'settings',\r\n        deps: ['$transition$', 'settings'],\r\n      resolveFn: (trans, settings) =>{\r\n        return;\r\n      }}]\r\n    }\r\n  ]\r\n\r\n\r\n\r\n  render(){\r\n    return (\r\n      <ROns.Page>\r\n          <ROns.Tabbar />\r\n        </ROns.Page>\r\n    );\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}
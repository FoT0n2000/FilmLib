{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0430\\u0442\\u043E\\u043B\\u0438\\u0439\\\\Desktop\\\\\\u0443\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\3 \\u043A\\u0443\\u0440\\u0441\\\\6 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\react js\\\\TEST\\\\my-app\\\\src\\\\App\\\\Pages\\\\Category.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHttp } from '../Hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { UISref, UIRouter, UIView, UIRouterReact, useRouter, useCurrentStateAndParams } from \"@uirouter/react\";\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Ons = require('onsenui');\n\nvar ROns = require('react-onsenui'); // eslint-disable-next-line import/no-anonymous-default-export\n\n\nexport default _s2(() => {\n  var _s = $RefreshSig$();\n\n  _s2();\n\n  const [add, SetAdd] = useState(false);\n  const [categories, SetCategories] = useState([]);\n  const auth = useContext(AuthContext);\n  const {\n    loading,\n    request,\n    error,\n    clearError\n  } = useHttp();\n  const [Titles, SetTitles] = useState([]);\n\n  const CurrentState = () => {\n    _s();\n\n    const {\n      state,\n      params\n    } = useCurrentStateAndParams();\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [state.name, \" (\", JSON.stringify(params), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(CurrentState, \"EuszDAfoQeAUtrYuK2oNIoLpHMY=\", false, function () {\n    return [useCurrentStateAndParams];\n  });\n\n  useEffect(() => {\n    if (Titles.length === 0) GetTitles();\n  });\n\n  const GetTitles = async () => {\n    const data = await request('http://localhost:5000/api/categories/get/', 'GET');\n    SetTitles(data.titles.map(title => title));\n  };\n\n  const CatList = () => {\n    return /*#__PURE__*/_jsxDEV(ROns.List, {\n      children: categories.map(row => {\n        return /*#__PURE__*/_jsxDEV(ROns.ListItem, {\n          children: /*#__PURE__*/_jsxDEV(UISref, {\n            to: \"app.signUp\",\n            children: /*#__PURE__*/_jsxDEV(ROns.Button, {\n              modifier: \"large--quiet\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ROns.Page, {\n    children: [/*#__PURE__*/_jsxDEV(ROns.Toolbar, {\n      style: {\n        'position': 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: \" \\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), AdminButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), add ? AddCat() : CatList()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}, \"WIbrllp6Oep6X0cb/IdcwPT6E4c=\", false, function () {\n  return [useHttp];\n});","map":{"version":3,"sources":["C:/Users/Анатолий/Desktop/университет/3 курс/6 семестр/react js/TEST/my-app/src/App/Pages/Category.js"],"names":["React","useContext","useEffect","useState","useHttp","AuthContext","UISref","UIRouter","UIView","UIRouterReact","useRouter","useCurrentStateAndParams","BrowserRouter","Route","Link","Switch","Ons","require","ROns","add","SetAdd","categories","SetCategories","auth","loading","request","error","clearError","Titles","SetTitles","CurrentState","state","params","name","JSON","stringify","length","GetTitles","data","titles","map","title","CatList","row","AdminButton","AddCat"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../Hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport { UISref, UIRouter, UIView, UIRouterReact, useRouter, useCurrentStateAndParams} from \"@uirouter/react\";\r\nimport { BrowserRouter, Route, Link, Switch } from 'react-router-dom';\r\nvar Ons = require('onsenui');\r\nvar ROns = require('react-onsenui');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () =>  {\r\n\r\n  const [add, SetAdd] = useState(false)\r\n  const [categories, SetCategories] = useState([])\r\n\r\n\r\n  const auth = useContext(AuthContext)\r\n  const {loading, request, error, clearError} = useHttp()\r\n\r\n  const [Titles, SetTitles] = useState([])\r\n\r\n  const CurrentState = () => {\r\n    const { state, params } = useCurrentStateAndParams();\r\n    return <span>{state.name} ({JSON.stringify(params)})</span>;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(Titles.length === 0)\r\n      GetTitles();  \r\n  })\r\n\r\n  const GetTitles = async () => {\r\n    const data = await request('http://localhost:5000/api/categories/get/', 'GET')\r\n    SetTitles(data.titles.map(title => title))\r\n  }\r\n\r\n  const CatList = () => {\r\n    return(\r\n      <ROns.List>\r\n        {\r\n          categories.map(row => {\r\n            return(\r\n              <ROns.ListItem>\r\n              <UISref to=\"app.signUp\"><ROns.Button modifier=\"large--quiet\">{row.name}</ROns.Button></UISref>\r\n\r\n            </ROns.ListItem>\r\n            )\r\n          })\r\n        }\r\n      </ROns.List> \r\n    )\r\n  }\r\n\r\n  return (\r\n    <ROns.Page>\r\n      <ROns.Toolbar style={{'position': 'relative'}}>\r\n        <div className=\"center\"> Категории </div>\r\n        {AdminButton()}\r\n      </ROns.Toolbar>\r\n      {add? AddCat(): CatList()}\r\n    </ROns.Page>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
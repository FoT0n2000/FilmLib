{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nexport const useHttp = () => {\n  _s();\n\n  const [loading, SetLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const Request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    SetLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n        headers['Content-Type'] = 'application/json';\n      }\n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Что-то пошло не так\");\n      }\n\n      SetLoading(false);\n      return data;\n    } catch (e) {\n      SetLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  const ClearError = useCallback(() => setError(null));\n  return {\n    loading,\n    Request,\n    error,\n    ClearError\n  };\n};\n\n_s(useHttp, \"lze8X44464dqkZFoR12J4wd8sBs=\");","map":{"version":3,"sources":["C:/Users/Анатолий/Desktop/университет/3 курс/6 семестр/react js/TEST/my-app/src/App/Hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","SetLoading","error","setError","Request","url","method","body","headers","JSON","stringify","response","fetch","data","json","ok","Error","message","e","ClearError"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,OAAO,GAAGN,WAAW,CAAE,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AACnFP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAG;AACC,UAAGM,IAAH,EAAQ;AACJA,QAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,QAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACH;;AAED,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAK;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAAL,CAA5B;AACA,YAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAG,CAACH,QAAQ,CAACI,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,qBAA1B,CAAN;AACH;;AAEDhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOY,IAAP;AACH,KAfD,CAgBA,OAAOK,CAAP,EAAS;AAELjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACe,CAAC,CAACD,OAAH,CAAR;AAEA,YAAMC,CAAN;AACH;AACJ,GAzB0B,EAyBxB,EAzBwB,CAA3B;AA2BA,QAAMC,UAAU,GAAGrB,WAAW,CAAC,MAAMK,QAAQ,CAAC,IAAD,CAAf,CAA9B;AAEA,SAAO;AAACH,IAAAA,OAAD;AAAUI,IAAAA,OAAV;AAAmBF,IAAAA,KAAnB;AAA0BiB,IAAAA;AAA1B,GAAP;AACH,CAlCM;;GAAMpB,O","sourcesContent":["import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, SetLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    \r\n    const Request = useCallback( async (url, method = \"GET\", body = null, headers = {}) => {\r\n        SetLoading(true);\r\n        try{\r\n            if(body){\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n\r\n            const response = await fetch(url,{method, body, headers});\r\n            const data = await response.json();\r\n\r\n            if(!response.ok){\r\n                throw new Error(data.message || \"Что-то пошло не так\");\r\n            }\r\n\r\n            SetLoading(false);\r\n            return data;\r\n        }\r\n        catch (e){\r\n\r\n            SetLoading(false);\r\n            setError(e.message);\r\n\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const ClearError = useCallback(() => setError(null)); \r\n\r\n    return {loading, Request, error, ClearError};\r\n}"]},"metadata":{},"sourceType":"module"}